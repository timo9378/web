.intro-animation-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #000; /* Start with black background */
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  z-index: 9999; /* Ensure it's on top */
  opacity: 1; /* Will be animated for fade-out */
  /* Add position relative for pseudo-elements */
  position: relative;
  /* Removed opacity transition */
  /* The reveal animation will handle the disappearance */
  /* clip-path: circle(150% at center); */ /* Start fully visible - REMOVED */
  /* Background color is now handled by pseudo-element */
  /* position: relative; */ /* REMOVED - No longer needed for pseudo-element */
  /* clip-path removed from container */
  /* Container itself will fade out later */
}

/* Container needs pointer-events none when complete */
.intro-animation-container.complete {
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-out; /* Fade-out duration */
  /* Removed visibility transition, component will unmount via JS state */
}

/* SVG container styles */
.star-svg-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2; /* Ensure stars are above background but below particles if needed */
  overflow: visible; /* Allow glow filter to extend */
}

/* Remove singularity styles */

/* Updated styles for the SVG stars (circles) */
.star {
  /* Removed position, width, height, border-radius */
  opacity: 1; /* SVG animateMotion handles initial appearance */
  /* box-shadow is replaced by SVG filter */
  /* Removed animation property */
  /* Add transition for explosion effect */
  transition: transform 0.4s ease-out, opacity 0.4s ease-out;
}

.star-1 {
  fill: #f0e4ff; /* Light lavender - use fill for SVG */
  /* Removed background-color and animation */
}

.star-2 {
  fill: #d8bfff; /* Slightly deeper lavender - use fill for SVG */
  /* Removed background-color */
  /* Add animation for the trail effect */
  animation: star-trail-glow 3s infinite alternate ease-in-out;
}

.star-2 {
  fill: #d8bfff; /* Slightly deeper lavender - use fill for SVG */
  /* Removed background-color */
  /* Add animation for the trail effect with a slight delay */
  animation: star-trail-glow 3s 0.1s infinite alternate ease-in-out; /* Add 0.1s delay */
}

/* Keyframes for the trail glow animation */
@keyframes star-trail-glow {
  0% {
    /* Start with a base trail */
    /* Multiple shadows create the trail length and fade */
    box-shadow:
      0 0 8px 2px rgba(240, 228, 255, 0.9), /* Inner glow */
      /* Trail segments */
      /* Note: SVG doesn't have a natural 'back', so offsets are tricky. */
      /* We'll rely on the glow spreading. */
      /* Using multiple faint glows might simulate a trail better than offsets */
      0 0 15px 5px rgba(220, 200, 255, 0.5),
      0 0 25px 10px rgba(200, 180, 240, 0.3),
      0 0 40px 15px rgba(180, 160, 220, 0.15);
  }
  50% {
    /* Brighter, slightly warmer glow in the middle */
    box-shadow:
      0 0 10px 3px rgba(255, 245, 230, 1), /* Warmer inner glow */
      0 0 20px 7px rgba(255, 230, 200, 0.6),
      0 0 35px 12px rgba(240, 210, 180, 0.4),
      0 0 50px 18px rgba(220, 190, 160, 0.2);
  }
  100% {
    /* Return to a slightly different base trail */
    box-shadow:
      0 0 9px 2.5px rgba(210, 230, 255, 0.9), /* Cooler inner glow */
      0 0 18px 6px rgba(190, 210, 255, 0.5),
      0 0 30px 11px rgba(170, 190, 230, 0.3),
      0 0 45px 16px rgba(150, 170, 210, 0.15);
  }
}


/* Star explosion animation (applied when 'explode' class is added) */
/* Target SVG circles directly with CSS transforms/opacity */
.intro-animation-container.explode .star {
  /* Removed animation: star-explode */
  animation: none; /* Stop the trail animation during explosion */
  box-shadow: none; /* Remove trail during explosion */
  opacity: 0 !important; /* Force fade out */
  /* Apply scaling transform directly */
  /* Note: transform-origin is center for SVG elements by default */
  transform: scale(5);
}


.particle {
  position: absolute;
  width: 2px; /* Reduced size */
  height: 2px; /* Reduced size */
  background-color: #fff;
  border-radius: 50%;
  opacity: 0;
  box-shadow: 0 0 2px 0.5px #fff; /* Reduced glow */
  z-index: 2; /* Ensure particles are above the pseudo-element */
  /* Variables set in JSX: --angle, --distance, --duration, --base-delay */
}

.intro-animation-container.explode .particle {
  /* Revert to ease-out for a more natural explosion deceleration */
  /* Use base-delay calculated from JSX, starting when explode happens */
  animation: particle-explode var(--duration) ease-out calc(var(--base-delay) * 1s) forwards;
}

/* Apply background fade animation when exploding */ /* Comment remains, but no animation here */
/* .intro-animation-container.explode { */ /* REMOVED fade-to-main-bg animation */
  /* animation: fade-to-main-bg 2.0s ease-in-out forwards; */ /* Increased duration */
  /* animation-delay: 1.0s; */ /* Start fading much earlier */
/* } */

/* Removed .content-placeholder and .fade-content styles as they are no longer used */

/* Remove singularity keyframes */
/* Remove orbit-star-1 and orbit-star-2 keyframes */
/* Remove star-explode keyframe */


@keyframes particle-explode {
  0% {
    opacity: 0;
    transform: translate(0, 0) scale(0.1); /* Start smaller and invisible */
  }
  10% {
     opacity: 1; /* Appear very quickly */
     transform: translate(0, 0) scale(0.5); /* Still small, before major movement */
  }
  /* Let ease-out handle the main movement and slowdown */
  80% { /* Start fading before the end */
    opacity: 1;
    transform:
      rotate(var(--angle))
      translateX(var(--distance))
      scale(1);
  }
  100% {
    opacity: 0; /* Fade out completely */
    /* Keep final position but fade */
    transform:
      rotate(var(--angle))
      translateX(var(--distance))
      scale(1);
  }
}

/* Removed fade-to-main-bg keyframes and application */

@keyframes expand-background { /* New animation for pseudo-element */
  0% { /* Ensure it starts exactly at 0% */
    clip-path: circle(0% at center);
  }
  100% {
    clip-path: circle(150% at center); /* Expand outwards */
  } /* Add missing closing brace */
}


/* @keyframes reveal-content { */ /* REMOVED */
  /* from { */
    /* clip-path: circle(0% at center); */
  /* } */
  /* to { */
    /* clip-path: circle(150% at center); /* Expand beyond viewport */
  /* } */
/* } */

/* @keyframes fade-out-intro { */ /* REMOVED fade-out animation */
  /* from { */
    /* opacity: 1; */
  /* } */
  /* to { */
    /* opacity: 0; */
/* Add pseudo-elements for the expanding background layers */
.intro-animation-container::before,
.intro-animation-container::after {
  content: '';
  position: absolute;
  inset: 0; /* Covers the entire container */
  clip-path: circle(0% at center); /* Start hidden */
  opacity: 1; /* Explicitly start visible */
  transition: opacity 0.3s ease-out; /* Add transition for fade-out */
}

/* Layer 1 (Bottom) - Slightly darker/different color */
.intro-animation-container::before {
  background-color: rgba(40, 30, 60, 0.8); /* Darker purple, slightly transparent */
  z-index: 0; /* Behind ::after */
}

/* Layer 2 (Top) - Main background color */
.intro-animation-container::after {
  background-color: rgb(18, 13, 32); /* Target background color */
  z-index: 1; /* Above ::before, below particles */
}

/* Apply expansion animation to the pseudo-elements when exploding */
/* Layer 1 (::before) - Starts when explode class is added */
.intro-animation-container.explode::before {
  animation: expand-background-layer1 1.3s ease-out forwards; /* Removed delay */
}

/* Layer 2 (::after) - Starts slightly after ::before */
.intro-animation-container.explode::after {
  animation: expand-background 1.1s ease-out 0.15s forwards; /* Short delay relative to explode start */
}

/* Fade out both pseudo-elements along with the container */
.intro-animation-container.complete::before,
.intro-animation-container.complete::after {
  opacity: 0;
}

/* New keyframes for the first layer */
@keyframes expand-background-layer1 {
  0% {
    clip-path: circle(0% at center);
    opacity: 0.6; /* Start slightly faded */
  }
  100% {
    clip-path: circle(140% at center); /* Expand slightly less than main layer */
    opacity: 1;
  }
}

/* Removed .reveal-content styles and .reveal::after styles */


/* Ensure particles/singularity fade out correctly */
/* The particle-explode animation already handles particle fade out */
/* The singularity-explode animation already handles singularity fade out */
/* No extra rules needed here unless specific override is required */
